# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def binaryTreePaths(self, root: Optional[TreeNode]) -> List[str]:
        result=[]
        def dfs(node,x):
            if not node:
                return
            elif not node.left and not node.right:
                result.append(x+[str(node.val)])
            else:
                dfs(node.left,x+[str(node.val)])
                dfs(node.right,x+[str(node.val)])
        dfs(node=root,x=[])
        return [*map('->'.join,result)]
